name: release
on:
  push:
    tags:
      - "v*.*.*"

permissions:
  contents: write # required for creating release

jobs:
  build:
    name: ${{ matrix.settings.target }}
    runs-on: ${{ matrix.settings.host }}
    strategy:
      matrix:
        settings:
          - host: macos-latest
            target: x86_64-apple-darwin
          - host: macos-latest
            target: aarch64-apple-darwin
          - host: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - host: ubuntu-latest
            target: x86_64-unknown-linux-musl
          - host: ubuntu-latest
            target: aarch64-unknown-linux-gnu
          - host: ubuntu-latest
            target: aarch64-unknown-linux-musl
          - host: windows-latest
            target: x86_64-pc-windows-msvc
          - host: windows-latest
            target: aarch64-pc-windows-msvc
          - host: windows-latest
            target: i686-pc-windows-msvc

    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: install rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.settings.target }}

      - name: build
        run: |
          if [[ "${{ runner.os }}" == "Linux" ]]; then
            cargo install cross --git https://github.com/cross-rs/cross
            cross build --release --target ${{ matrix.settings.target }}
          else
            cargo build --release --target ${{ matrix.settings.target }}
          fi
        shell: bash

      - name: prepare artifact
        run: |
          cd target/${{ matrix.settings.target }}/release
          if [[ "${{ runner.os }}" == "Windows" ]]; then
            7z a lambda-${{ matrix.settings.target }}.zip lambda${{ matrix.settings.ext }}
          else
            zip lambda-${{ matrix.settings.target }}.zip lambda${{ matrix.settings.ext }}
          fi
        shell: bash

      - name: upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.settings.target }}
          path: target/${{ matrix.settings.target }}/release/lambda-${{ matrix.settings.target }}.zip

  release:
    runs-on: ubuntu-latest
    needs:
      - build

    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: release artifacts
        uses: softprops/action-gh-release@v2
        with:
          files: artifacts/*/*.zip
          tag_name: ${{ github.ref_name }}
