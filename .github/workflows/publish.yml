name: publish
on:
  push:
    tags:
      - "v*.*.*"

permissions:
  contents: write # required for creating release
  id-token: write # required for npm provenance

jobs:
  build:
    name: ${{ matrix.settings.target }}
    runs-on: ${{ matrix.settings.host }}
    strategy:
      matrix:
        settings:
          - host: macos-latest
            target: x86_64-apple-darwin
          - host: macos-latest
            target: aarch64-apple-darwin
          - host: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - host: ubuntu-latest
            target: x86_64-unknown-linux-musl
          - host: ubuntu-latest
            target: aarch64-unknown-linux-gnu
          - host: ubuntu-latest
            target: aarch64-unknown-linux-musl
          - host: windows-latest
            target: x86_64-pc-windows-msvc
            ext: ".exe"
          - host: windows-latest
            target: aarch64-pc-windows-msvc
            ext: ".exe"
          - host: windows-latest
            target: i686-pc-windows-msvc
            ext: ".exe"

    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: install rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.settings.target }}

      - name: build
        run: |
          if [[ "${{ runner.os }}" == "Linux" ]]; then
            cargo install cross --git https://github.com/cross-rs/cross
            AWS_LC_SYS_NO_PREFIX=1 cross build --release --target ${{ matrix.settings.target }}
          else
            cargo build --release --target ${{ matrix.settings.target }}
          fi
        shell: bash

      - name: upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.settings.target }}
          path: target/${{ matrix.settings.target }}/release/lambda${{ matrix.settings.ext }}

  release:
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: archive and compress artifacts
        run: |
          mkdir -p compressed
          for dir in artifacts/*/; do
            target=$(basename "$dir")
            tar -czf "compressed/lambda-${target}.tar.gz" -C "$dir" .
          done

      - name: release artifacts
        uses: softprops/action-gh-release@v2
        with:
          files: compressed/*.tar.gz
          tag_name: ${{ github.ref_name }}

  publish:
    runs-on: ubuntu-latest
    needs: [build, release]
    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: install node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: "https://registry.npmjs.org"

      - name: publish to npm
        run: cd npm && npm publish --provenance --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
